--- src/map/status.hpp	(revisão 65528)
+++ src/map/status.hpp	(cópia de trabalho)
@@ -30,16 +30,18 @@
 
 /// Refine type
 enum refine_type {
-	REFINE_TYPE_ARMOR	= 0,
-	REFINE_TYPE_WEAPON1	= 1,
-	REFINE_TYPE_WEAPON2	= 2,
-	REFINE_TYPE_WEAPON3	= 3,
-	REFINE_TYPE_WEAPON4	= 4,
-	REFINE_TYPE_SHADOW	= 5,
-	REFINE_TYPE_MAX		= 6
+	REFINE_TYPE_ARMOR = 0,
+	REFINE_TYPE_WEAPON1,
+	REFINE_TYPE_WEAPON2,
+	REFINE_TYPE_WEAPON3,
+	REFINE_TYPE_WEAPON4,
+	REFINE_TYPE_SHADOW,
+	REFINE_TYPE_SHADOW_WEAPON,
+	REFINE_TYPE_COSTUME,
+	REFINE_TYPE_MAX
 };
 
-/// Refine cost type
+/// Refine cost & chance type
 enum refine_cost_type {
 	REFINE_COST_NORMAL = 0,
 	REFINE_COST_OVER10,
@@ -48,17 +50,37 @@
 	REFINE_COST_OVER10_HD,
 	REFINE_COST_HOLINK,
 	REFINE_COST_WAGJAK,
+	REFINE_COST_BLESSED,
+	REFINE_COST_EVT_ENRICHED,
+	REFINE_COST_EVT_OVER10_HD,
 	REFINE_COST_MAX
 };
 
+// Refine information type
+enum refine_info_type {
+	REFINE_MATERIAL_ID = 0,
+	REFINE_ZENY_COST,
+	REFINE_REFINEUI_ENABLED,
+};
+
 struct refine_cost {
 	unsigned short nameid;
 	int zeny;
+	bool refineui;
+	uint16 breaking;
+	uint16 downrefine;
+	uint16 downrefine_num;
 };
 
+struct refine_bs_blessing {
+	unsigned short nameid, count;
+};
+
 /// Get refine chance
-int status_get_refine_chance(enum refine_type wlv, int refine, bool enriched);
-int status_get_refine_cost(int weapon_lv, int type, bool what);
+int status_get_refine_chance(enum refine_type refine_type, int refine, enum refine_cost_type type);
+int status_get_refine_cost(enum refine_type refine_type, int type, enum refine_info_type what);
+bool status_get_refine_blacksmithBlessing(struct refine_bs_blessing* bs, enum refine_type type, int refine);
+struct refine_cost *status_get_refine_cost_(enum refine_type refine_type, int type);
 
 /// Weapon attack modification for size
 struct s_sizefix_db {
@@ -2316,15 +2338,6 @@
 	CALCWT_CARTSTATE = 0x4,	///< Whether to check for cart state
 };
 
-// Enum for refine chance types
-enum e_refine_chance_type {
-	REFINE_CHANCE_NORMAL = 0,
-	REFINE_CHANCE_ENRICHED,
-	REFINE_CHANCE_EVENT_NORMAL,
-	REFINE_CHANCE_EVENT_ENRICHED,
-	REFINE_CHANCE_TYPE_MAX
-};
-
 ///Define to determine who gets HP/SP consumed on doing skills/etc. [Skotlex]
 #define BL_CONSUME (BL_PC|BL_HOM|BL_MER|BL_ELEM)
 ///Define to determine who has regen
